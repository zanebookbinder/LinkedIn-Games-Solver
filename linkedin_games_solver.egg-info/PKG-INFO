Metadata-Version: 2.4
Name: linkedin-games-solver
Version: 0.1.2
Summary: A solver for LinkedIn's puzzle games using Selenium
Home-page: https://github.com/zanebookbinder/LinkedIn-Games-Solver
Author: Zane Bookbinder
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: attrs
Requires-Dist: certifi
Requires-Dist: charset-normalizer
Requires-Dist: h11
Requires-Dist: idna
Requires-Dist: outcome
Requires-Dist: PySocks
Requires-Dist: readchar
Requires-Dist: rich
Requires-Dist: selenium
Requires-Dist: sniffio
Requires-Dist: sortedcontainers
Requires-Dist: trio
Requires-Dist: trio-websocket
Requires-Dist: typing_extensions
Requires-Dist: urllib3
Requires-Dist: websocket-client
Requires-Dist: websockets
Requires-Dist: wsproto
Dynamic: author
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# LinkedIn-Games-Solver

A Python package designed to solve LinkedIn's puzzle games, including Tango, Queens, and Zip. This tool uses Selenium to automate gameplay, solving each game efficiently by navigating the game board, avoiding obstacles, and following game rules.

Uses Selenium to open a Safari browser, read today's game board, solve it, and input the correct answer.

Find the package on PyPi here: https://pypi.org/project/linkedin-games-solver/

## Usage

Install package: `pip install linkedin-games-solver`

Run in command line: `linkedin-solver`

Or use in Python:

`from linkedin_games_solver import solver`
`solver.main()`

## Supported Games:

Tango: Fill a grid with Moon and Sun symbols according to specific rules.

Queens: Place queens on a chessboard.

Zip: Find a path between sequential numbers in a grid while avoiding walls and covering every square.
